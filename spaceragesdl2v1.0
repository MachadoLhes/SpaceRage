#include <stdio.h>
#include <stdlib.h>
#include <SDL2/SDL.h>
#include <SDL2/SDL_image.h>

int main(void)
{
	//Declaração de Sprites e Fundos
	SDL_Init(SDL_INIT_VIDEO);
	SDL_Window * screen;
	SDL_Renderer * renderer;
	SDL_Texture * fundo;
	SDL_Texture * PlayerOne;
	SDL_Texture * PlayerOneUp;
	SDL_Texture * PlayerOneDown;
	SDL_Texture * PlayerOneLeft;
	SDL_Texture * PlayerOneRight;
	SDL_Texture * PlayerOneAccUp;
	SDL_Texture * PlayerOneAccDown;
	SDL_Texture * PlayerOneAccLeft;
	SDL_Texture * PlayerOneAccRight;
	SDL_Event event;
	SDL_Rect dest = {0,0,64,64};

	int velX=0, velY=0;

	//Define o tamanho da tela
	screen = SDL_CreateWindow("Space Rage", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 1281, 720, 0);
	renderer = SDL_CreateRenderer(screen, -1, SDL_RENDERER_ACCELERATED);
	//Carrega o fundo e os sprites
	fundo = IMG_LoadTexture(renderer, "Tela1.png");
	PlayerOneUp = IMG_LoadTexture(renderer, "p1basicup.png");
	PlayerOneDown = IMG_LoadTexture(renderer, "p1basicdown.png");
	PlayerOneLeft = IMG_LoadTexture(renderer, "p1basicleft.png");
	PlayerOneRight = IMG_LoadTexture(renderer, "p1basicright.png");
	PlayerOneAccUp = IMG_LoadTexture(renderer, "p1acc1up.png");
	PlayerOneAccDown = IMG_LoadTexture(renderer, "p1acc1down.png");
	PlayerOneAccLeft = IMG_LoadTexture(renderer, "p1acc1left.png");
	PlayerOneAccRight = IMG_LoadTexture(renderer, "p1acc1right.png");
	PlayerOne = PlayerOneRight;

	//Loop Principal
	int done =0;
	while (done==0)
	{
		//Cria a tela e imprime o fundo
		SDL_RenderClear(renderer);
		SDL_RenderCopy(renderer, fundo, NULL, NULL);
		while(SDL_PollEvent(&event))
		{
			if(event.type==SDL_QUIT)
				done=1;
			//Comando de Teclas
			if(event.type==SDL_KEYDOWN)
			{
				switch (event.key.keysym.sym)
				{
					case SDLK_w:
						velY=-15;
						PlayerOne=PlayerOneAccUp;
						break;

					case SDLK_s:
						velY=15;
						PlayerOne=PlayerOneAccDown;
						break;

					case SDLK_d:
						velX=15;
						PlayerOne=PlayerOneAccRight;
						break;

					case SDLK_a:
						velX=-15;
						PlayerOne=PlayerOneAccLeft;
						break;

					default:
						break;
				}
			}
			if(event.type==SDL_KEYUP)
			{
				switch (event.key.keysym.sym)
				{
					case SDLK_w:
						velY=0;
						PlayerOne=PlayerOneUp;
						break;

					case SDLK_s:
						velY=0;
						PlayerOne=PlayerOneDown;
						break;

					case SDLK_d:
						velX=0;
						PlayerOne=PlayerOneRight;
						break;

					case SDLK_a:
						velX=0;
						PlayerOne=PlayerOneLeft;
						break;

					default:
						break;
				}
			}
		}
		dest.x=dest.x+velX;
		dest.y=dest.y+velY;
		SDL_RenderCopy(renderer, PlayerOne, NULL, &dest);
		SDL_RenderPresent(renderer);
		SDL_Delay(60);
	}

	SDL_Quit();

	return 0;
}
